# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang:1.6.2
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
# The steps that will be executed on build
# Steps make up the actions in your pipeline
# Read more about steps on our dev center:
# http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
      package-dir: github.com/getlantern/borda
    - script:
      name: glide install
      code: |
        cd /tmp
        curl -L https://github.com/Masterminds/glide/releases/download/0.10.2/glide-0.10.2-linux-amd64.tar.gz -o glide.tar.gz
        tar -xf glide.tar.gz
        sudo mv linux-amd64/glide /usr/local/bin/
    - script:
      name: glide update
      code: |
        glide update
    # Build the project
    - script:
      name: go build
      code: |
        go build .
    # Test the project
    - script:
      name: go test
      code: |
        go test -race .

integration-test:
  steps:
    - script:
      name: influx install
      code: |
        wget https://dl.influxdata.com/influxdb/releases/influxdb_0.12.2-1_amd64.deb
        sudo dpkg -i influxdb_0.12.2-1_amd64.deb
        nohup influxd &
    - wercker/setup-go-workspace:
      package-dir: github.com/getlantern/borda
    - script:
      name: glide install
      code: |
        cd /tmp
        curl -L https://github.com/Masterminds/glide/releases/download/0.10.2/glide-0.10.2-linux-amd64.tar.gz -o glide.tar.gz
        tar -xf glide.tar.gz
        sudo mv linux-amd64/glide /usr/local/bin/
    - script:
      name: glide update
      code: |
        glide update
    # Build the project
    - script:
      name: go build
      code: |
        go build .
    # Test the project
    - script:
      name: go test
      code: |
        go test -v -tags "integration_test"
