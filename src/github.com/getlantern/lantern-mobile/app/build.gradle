apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {

    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    // Use now as the user-visible version
    def now = new java.util.Date()
    def nowFormatted = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(now)

    // Calculate the versionCode as the number of seconds from a fixed start
    // point so that it's always increasing.
    def start = new java.util.Date(2015, 1, 1).getTime()
    def code = (int) ((now.getTime() - start) / 1000)

    defaultConfig {
	    minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        applicationId "org.getlantern.lantern"
        versionCode code
        versionName "1.0." + nowFormatted
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            if (project.hasProperty("KEYSTORE_FILE")) {
                storeFile file(KEYSTORE_FILE)
                keyAlias "Lantern Release Key"
                storePassword KEYSTORE_PWD
                keyPassword KEY_PWD
            }
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../../../../../MobileSDK/sdk/proguard-rules.pro'
        }

        applicationVariants.all { variant ->

            variant.buildConfigField "String", "LANTERN_VERSION", "\"$project.lanternVersion\""

            variant.outputs.each { output ->
                output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app-debug", "lantern-debug")
                )
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile(name:'liblantern', ext:'aar')
    compile(name:'sdk-debug', ext:'aar')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile gplay
    compile appCompat
    compile 'com.google.guava:guava:19.0'
    compile 'com.mandrillapp.wrapper.lutung:lutung:0.0.6'
    compile 'com.github.tony19:timber-loggly:1.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.3@aar') {
        transitive = true
    }
}
