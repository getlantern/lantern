// Java class go.issue10788.Issue10788 is a proxy for talking to a Go program.
//   gobind -lang=java issue10788
//
// File is generated by gobind. Do not edit.
package go.issue10788;

import go.Seq;

public abstract class Issue10788 {
    static {
        Seq.touch(); // for loading the native library
        init();
    }
    
    private Issue10788() {} // uninstantiable
    
    // touch is called from other bound packages to initialize this package
    public static void touch() {}
    
    private static native void init();
    
    public static final class TestStruct implements go.Seq.Object {
        private final go.Seq.Ref ref;
        
        private TestStruct(go.Seq.Ref ref) { this.ref = ref; }
        
        public final go.Seq.Ref ref() { return ref; }
        
        public final native String getValue();
        public final native void setValue(String v);
        
        @Override public boolean equals(Object o) {
            if (o == null || !(o instanceof TestStruct)) {
                return false;
            }
            TestStruct that = (TestStruct)o;
            String thisValue = getValue();
            String thatValue = that.getValue();
            if (thisValue == null) {
                if (thatValue != null) {
                    return false;
                }
            } else if (!thisValue.equals(thatValue)) {
                return false;
            }
            return true;
        }
        
        @Override public int hashCode() {
            return java.util.Arrays.hashCode(new Object[] {getValue()});
        }
        
        @Override public String toString() {
            StringBuilder b = new StringBuilder();
            b.append("TestStruct").append("{");
            b.append("Value:").append(getValue()).append(",");
            return b.append("}").toString();
        }
    }
    
    public interface TestInterface extends go.Seq.Object {
        public void DoSomeWork(TestStruct s);
        public void MultipleUnnamedParams(long p0, String p1, long p2);
        public static abstract class Stub implements TestInterface {
            private final go.Seq.Ref ref;
            public Stub() {
                ref = go.Seq.createRef(this);
            }
            
            public final go.Seq.Ref ref() { return ref; }
            
        }
        
        static final class Proxy implements TestInterface {
            private go.Seq.Ref ref;
        
            Proxy(go.Seq.Ref ref) { this.ref = ref; }
        
            public final go.Seq.Ref ref() { return ref; }
        
            public native void DoSomeWork(TestStruct s);
            public native void MultipleUnnamedParams(long p0, String p1, long p2);
        }
    }
    
    
}
